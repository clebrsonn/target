plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
	id 'checkstyle'
	id 'pmd'
}

group = 'br.com.hyteck'
version = '0.0.4-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	compile 'org.springdoc:springdoc-openapi-ui:1.3.9'

	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'com.h2database:h2'


	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'



	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}
checkstyle {
	toolVersion = '8.31'
	showViolations = true
	configFile = file("config/checkstyle/checkstyle.xml")

}
pmd {
	consoleOutput = true
	ignoreFailures = true
	toolVersion = "6.22.0"
	ruleSetFiles = files("config/pmd/pmd.xml")
}